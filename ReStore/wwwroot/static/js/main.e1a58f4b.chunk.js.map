{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/layout/LoadingComponent.tsx","features/home/HomePage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","pagination","JSON","parse","error","toast","title","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","fetchFilters","details","id","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","signInUser","userDto","dispatch","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","console","log","window","location","href","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","setMetaData","fetchProductAsync","fetchFiltersAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","navigate","useNavigate","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","sx","typography","onClick","event","currentTarget","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","item","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","Switch","checked","onChange","List","map","ListItem","toUpperCase","IconButton","size","Badge","badgeContent","LoadingComponent","message","Backdrop","invisible","height","CircularProgress","top","HomePage","style","maxWidth","margin","padding","overflowX","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","width","maxHeight","p","AppPagination","onPageChange","currentPage","totalCount","totalPages","Pagination","count","page","CheckboxButtons","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","FormLabel","RadioGroup","Radio","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","includes","ProductList","products","Grid","container","spacing","xs","ProductSearch","setSearchTerm","TextField","fullWidth","target","onKeyPress","orderByOptions","selectAll","useEffect","columnSpacing","Paper","mb","my","ProductDetails","productStatus","useParams","selectById","setQuantity","find","parseInt","Divider","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","AboutPage","ContactPage","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","textAlign","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","username","password","setValues","setLoading","handleSubmit","preventDefault","catch","finally","handleInputChange","Container","flexDirection","m","onSubmit","noValidate","mt","required","autoComplete","autoFocus","Register","usernameErrors","setUsernameErrors","emailErrors","setEmailErrors","passwordErrors","setPasswordErrors","handleApiErrors","errors","modelStateErrors","push","flat","forEach","prevErrors","success","helperText","PrivateRoute","children","OrderDetails","order","setSelectOrder","orderItems","orderStatus","orders","setOrders","selectedOrderNumber","setSelectedOrderNumber","total","orderDate","split","AddressForm","saveAddress","handleSaveAddress","disableSaveAddres","sm","fullName","address1","address2","city","zip","country","StripeInput","forwardRef","ref","Component","props","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","handleNameInputChange","md","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","elementError","cardNumber","CardExpiryElement","cardExpiry","CardCvcElement","cardCvc","Review","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","nameOnCard","formValues","setFormValues","setSaveAddress","setDisableSaveAddress","setCardState","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","cardComplete","setCardComplete","submitOrder","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","shippingAddress","handleNext","handleBack","saved","handleFormInputChange","elementType","complete","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","trim","stripePromise","loadStripe","CheckoutWrapper","App","setDarkMode","paletteType","initApp","useCallback","theme","createTheme","palette","mode","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1a58f4b.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep();\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const {data} = error.response!;\r\n    toast.error(data.title);\r\n\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get(\"products\", params),\r\n    fetchFilters: () => requests.get(\"products/filters\"),\r\n    details: (id: number) => requests.get(`products/${id}`)\r\n};\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post(\"account/login\", values),\r\n    register: (values: any) => requests.post(\"account/register\", values),\r\n    currentUser: () => requests.get(\"account/currentUser\"),\r\n    fetchAddress: () => requests.get(\"account/savedAddress\")\r\n};\r\n\r\nconst Orders = {\r\n    list: () => requests.get(\"orders\"),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post(\"orders\", values)\r\n};\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post(\"payments\", {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n};\r\n\r\nexport default agent;","export const getCookie = (key: string) => {\r\n  const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n  return b ? b.pop() : \"\";\r\n}\r\n\r\nexport const currencyFormat = (amount: number) => {\r\n  return '$' + (amount/100).toFixed(2);\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: \"idle\"\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    \"basket/fetchBasketAsync\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie(\"buyerId\")) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\r\n    \"basket/addBasketItemAsync\",\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, {productId: number, quantity: number, name?: string}>(\r\n    \"basket/removeBasketItemAsync\",\r\n    async ({ productId, quantity }, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity);\r\n        } catch(error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const basketSlice = createSlice({\r\n    name: \"basket\",\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: state => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = \"pendingAddItem\" + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = \"pendingRemoveItem\" + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket!.items[itemIndex].quantity <= 0) state.basket?.items.splice(itemIndex, 1);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state) => {\r\n            state.status = \"idle\"\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state) => {\r\n            state.status = \"idle\";\r\n        });\r\n    })\r\n});\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, any>(\r\n    \"account/signInUser\",\r\n    async (userDto, thunkAPI) => {\r\n        try {\r\n            // const userDto = await agent.Account.login(data);\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    \"account/fetchCurrentUser\",\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem(\"user\")!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return user; \r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem(\"user\")) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: \"account\",\r\n    initialState,\r\n    reducers: {\r\n        signOut: state => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(signInUser.rejected, (_, action) => {\r\n            console.log(action.error);\r\n        });\r\n        builder.addCase(fetchCurrentUser.rejected, state => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            window.location.href = process.env.REACT_APP_API_URL!;\r\n            toast.error(\"Session expired. Please log in again\");\r\n        });\r\n        builder.addCase(signInUser.fulfilled, (state, action) => {\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(fetchCurrentUser.fulfilled, (state, action) => {\r\n            state.user = action.payload;\r\n        });\r\n    }\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nconst getAxiosParams = (productParams: ProductParams) => {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", productParams.pageNumber.toString());\r\n    params.append(\"pageSize\", productParams.pageSize.toString());\r\n    params.append(\"orderBy\", productParams.orderBy);\r\n    if (productParams.searchTerm) params.append(\"searchTerm\", productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append(\"brands\", productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append(\"types\", productParams.types.toString());\r\n    return params;\r\n} \r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\r\n    \"catalog/fetchProductsAsync\",\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch(error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    \"catalog/fetchProductAsync\",\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch(error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchFiltersAsync = createAsyncThunk(\r\n    \"catalog/fetchFilters\",\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters()\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n);\r\n\r\nconst initParams = () => {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: \"name\",\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: \"catalog\",\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        brands: [],\r\n        types: [],\r\n        status: \"idle\",\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1}\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload};\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: state => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = \"pendingFetchProducts\";\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = \"idle\";\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, state => {\r\n            state.status = \"idle\";\r\n        });\r\n\r\n        builder.addCase(fetchProductAsync.pending, state => {\r\n            state.status = \"pendingFetchProduct\";\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, state => {\r\n            state.status = \"idle\";\r\n        });\r\n        \r\n        builder.addCase(fetchFiltersAsync.pending, state => {\r\n            state.status = \"pendingFetchFilters\"\r\n        });\r\n        builder.addCase(fetchFiltersAsync.fulfilled, (state, action) =>{\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = \"idle\";\r\n        });\r\n        builder.addCase(fetchFiltersAsync.rejected, state => {\r\n            state.status = \"idle\";\r\n        });\r\n    }\r\n});\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\nexport const {setProductParams, setPageNumber, setMetaData, resetProductParams} = catalogSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDsipatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDsipatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignedInMenu = () => {\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Button \r\n            color=\"inherit\"\r\n            sx={{typography: \"h6\"}}\r\n            onClick={handleClick}\r\n        >\r\n            {user?.email}\r\n        </Button>\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Fade}\r\n        >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose} component={Link} to=\"/orders\">My orders</MenuItem>\r\n            <MenuItem onClick={() => {\r\n                dispatch(signOut());\r\n                dispatch(clearBasket());\r\n                navigate(\"/\");\r\n            }}>Logout</MenuItem>\r\n        </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignedInMenu;","import { AppBar, Badge, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport ShoppingCart from \"@mui/icons-material/ShoppingCart\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    {title: \"catalog\", path:\"/catalog\"},\r\n    {title: \"about\", path:\"/about\"},\r\n    {title: \"contact\", path:\"/contact\"}\r\n];\r\n\r\nconst rightLinks = [\r\n    {title: \"login\", path:\"/login\"},\r\n    {title: \"register\", path:\"/register\"},\r\n];\r\n\r\nconst navStyles = {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    typography:\"h6\",\r\n    \"&:hover\": {\r\n        color: \"grey.500\"\r\n    },\r\n    \"&.active\": {\r\n        color: \"text.secondary\"\r\n    }\r\n};\r\n\r\nconst Header = ({ darkMode, handleThemeChange } : Props) => {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar sx={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Typography variant=\"h6\" component={NavLink} to=\"/\" sx={navStyles}>RE-STORE</Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n                <List sx={{display: \"flex\"}}>\r\n                    {midLinks.map(({title, path}) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to=\"/basket\" size=\"large\" sx={{color: \"inherit\"}}>\r\n                        <Badge badgeContent={itemCount} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? \r\n                    (<SignedInMenu />) \r\n                    : (\r\n                        <List sx={{display: \"flex\"}}>\r\n                            {rightLinks.map(({title, path}) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) }\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nexport default Header;","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nconst LoadingComponent = ({message = \"Loading...\"}: Props) => {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n                <CircularProgress size={100} color=\"secondary\" />\r\n                <Typography variant=\"h4\" sx={{justifyContent: \"center\", position: \"fixed\", top: \"60%\"}}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\nexport default LoadingComponent;","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <div style={{maxWidth: '100%', margin: 0, padding: 0, overflowX: 'hidden'}}>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" sx={{p: 4}}>\r\n                <Typography variant=\"h1\">Welocme to ReStore!</Typography>\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import { Pagination, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nconst AppPagination = ({ metaData, onPageChange }: Props) => {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1} - {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={(event, page) => onPageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AppPagination;","import { useState } from \"react\";\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void; \r\n}\r\n\r\nconst CheckboxButtons = ({ items, checked, onChange }: Props) => {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    const handleChecked = (value: string) => {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n            <FormControlLabel\r\n                key={item}\r\n                control={<Checkbox\r\n                            checked={checkedItems.indexOf(item) !== -1}\r\n                            onClick={() => handleChecked(item)}\r\n                        />}\r\n                label={item}\r\n            />\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default CheckboxButtons;","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange : (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nconst RadioButtonGroup = ({ options, onChange, selectedValue }: Props) => {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Order by</FormLabel>\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n            {options.map(({ value, label }) => (\r\n                <FormControlLabel key={value} value={value} control={<Radio />} label={label} />\r\n            ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default RadioButtonGroup;","import { Link } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Avatar, CardHeader } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nimport { Product } from \"../../app/models/product\";\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { addBasketItemAsync } from '../basket/basketSlice';\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nconst ProductCard = ({product}: Props) => {\r\n  const { status } = useAppSelector(state => state.basket);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n      <Card>\r\n        <CardHeader \r\n          avatar={\r\n              <Avatar sx={{bgcolor: \"secondary.main\"}}>\r\n                  {product.name.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n          }\r\n          title={product.name}\r\n          titleTypographyProps={{\r\n              sx: {fontWeight: \"bold\", color: \"primary.main\"}\r\n          }}\r\n        />  \r\n        <CardMedia\r\n          sx={{height: 140, backgroundSize: \"contain\"}}\r\n          image={product.pictureUrl}\r\n          title={product.name}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom color=\"secondary\" variant=\"h5\">\r\n            {currencyFormat(product.price)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {product.brand} / {product.type}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <LoadingButton loading={status.includes(\"pendingAddItem\" + product.id)} onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))} size=\"small\">Add to cart</LoadingButton>\r\n          <Button size=\"small\" component={Link} to={`/catalog/${product.id}`}>View</Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nconst ProductList = ({products}: Props) => {\r\n    return (\r\n        <Grid container spacing={4}>\r\n          {products.map(product => (\r\n              <Grid item xs={4} key={product.id}>\r\n                  <ProductCard product={product} />\r\n              </Grid>\r\n          ))}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default ProductList;","import { TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nconst ProductSearch = () => {\r\n    const { productParams } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n\r\n    \r\n\r\n    return (\r\n        <TextField\r\n            label=\"Search products\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={event => setSearchTerm(event.target.value)}\r\n            onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") dispatch(setProductParams({searchTerm}))\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProductSearch;","import { Grid, Paper, FormLabel } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { fetchFiltersAsync, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\n\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\n\r\nconst orderByOptions = [\r\n  {value: \"name\", label: \"Alphabetical\"},\r\n  {value: \"priceDesc\", label: \"Price - High to low\"},\r\n  {value: \"price\", label: \"Price - Low to High\"}\r\n];\r\n\r\nconst Catalog = () => {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    // i used two useEffect twice to avoid double loading of products because filters were loading faster than products and the page would rerender and then the component would\r\n    // fetch the products again.\r\n\r\n    useEffect(() => {\r\n      if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n      if (!filtersLoaded) dispatch(fetchFiltersAsync());\r\n    }, [filtersLoaded, dispatch])\r\n\r\n    if ((!productsLoaded || !filtersLoaded) || !metaData) return <LoadingComponent message=\"Loading Products...\" />\r\n\r\n    return (\r\n      <Grid container columnSpacing={4}>\r\n        <Grid item xs={3}>\r\n          <Paper sx={{ mb: 2 }}>\r\n            <ProductSearch />\r\n          </Paper>\r\n          \r\n          <Paper sx={{ mb: 2, p: 2 }}>\r\n            <RadioButtonGroup\r\n              options={orderByOptions}\r\n              selectedValue={productParams.orderBy}\r\n              onChange={(event) => dispatch(setProductParams({ orderBy: event.target.value }))}\r\n            />\r\n          </Paper>\r\n\r\n          <Paper sx={{ mb: 2, p: 2 }}>\r\n            <FormLabel component=\"legend\">Brands</FormLabel>\r\n            <CheckboxButtons\r\n              items={brands}\r\n              checked={productParams.brands}\r\n              onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n            />\r\n          </Paper>\r\n\r\n          <Paper sx={{ mb: 2, p: 2 }}>\r\n            <FormLabel component=\"legend\">Types</FormLabel>\r\n            <CheckboxButtons\r\n              items={types}\r\n              checked={productParams.types}\r\n              onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={9}>\r\n          <ProductList products={products} />\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={3} />\r\n        <Grid item xs={9} sx={{my: 2}}>\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n};\r\n\r\nexport default Catalog;","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket);\r\n    const { status: productStatus } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n    const {id} = useParams() as any;\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id)\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n    }, [id, item, dispatch, product]);\r\n\r\n    const handleInputChange = (event: any) => {\r\n        if (event.target.value >= 0)\r\n            setQuantity(parseInt(event.target.value));\r\n    }\r\n\r\n    const handleUpdateCart = () => {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }));\r\n        }\r\n    }\r\n\r\n    const displayCartMessage = () => {\r\n        if (!item) return \"Add to cart\"\r\n        else if (item && quantity === 0) return \"Remove item from cart\"\r\n        else return \"Update quantity\"\r\n    }\r\n\r\n    if (productStatus.includes(\"pending\")) return <LoadingComponent message=\"Loading product\" />\r\n\r\n    if (!product) return <h3>Product not found</h3>\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{width: \"100%\"}} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"h3\">{product.name}</Typography>\r\n                <Divider sx={{mb: 2}} />\r\n                <Typography variant=\"h4\" color=\"secondary\">${(product.price/100).toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Desctiption</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"number\"\r\n                            label=\"Quantity in cart\"\r\n                            fullWidth\r\n                            onChange={handleInputChange}\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes(\"pending\")}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: \"55px\"}}\r\n                            color={item && quantity === 0 ? \"error\" : \"primary\"}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            {/* {item ? \"Update quantity\" : \"Add to Cart\"} */}\r\n                            {displayCartMessage()}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\n\r\nexport default function AboutPage() {\r\n    return (\r\n        <Typography variant=\"h2\">\r\n            About page\r\n        </Typography>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n        <Typography variant=\"h2\">\r\n            Contact page\r\n        </Typography>\r\n    )\r\n}","import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\n\r\ninterface Props {\r\n    subtotal?: number\r\n}\r\n\r\nconst BasketSummary = ({ subtotal }: Props) => {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => item.price * item.quantity + sum, 0) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <TableContainer component={Paper} variant={\"outlined\"}>\r\n            <Table>\r\n                <TableBody>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2}>Subtotal</TableCell>\r\n                        <TableCell colSpan={2} align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2}>Delivery Fee*</TableCell>\r\n                        <TableCell colSpan={2} align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2}>Total</TableCell>\r\n                        <TableCell colSpan={2} align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell style={{fontStyle: \"italic\", textAlign: \"center\"}}>*Orders over $100 qualify for free delivery</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default BasketSummary;","import { Add, Delete, Remove } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nconst BasketTable = ({ items, isBasket= true }: Props) => {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} size=\"small\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket && <TableCell align=\"right\"></TableCell>}                        \r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                        key={item.productId}\r\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            <Box display=\"flex\" alignItems=\"center\">\r\n                                <img src={item.pictureUrl} alt={item.name} style={{height: 50, marginRight: 20}} />\r\n                                <span>{item.name}</span>\r\n                            </Box>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                            {isBasket && \r\n                                <LoadingButton\r\n                                    loading={status === \"pendingRemoveItem\" + item.productId + \"remove\"}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: \"remove\" }))}\r\n                                    color=\"error\"\r\n                                >\r\n                                    <Remove />\r\n                                </LoadingButton>\r\n                            }\r\n                            {item.quantity}\r\n                            {isBasket && \r\n                                <LoadingButton \r\n                                    loading={status === \"pendingAddItem\" + item.productId}\r\n                                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                    color=\"success\"\r\n                                >\r\n                                    <Add />\r\n                                </LoadingButton>\r\n                            }\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{currencyFormat(item.price * item.quantity)}</TableCell>\r\n                        {isBasket && \r\n                            <TableCell align=\"right\">\r\n                                <LoadingButton\r\n                                    loading={status === \"pendingRemoveItem\" + item.productId + \"delete\"}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: \"delete\" }))}\r\n                                    color=\"error\"\r\n                                >\r\n                                    <Delete />\r\n                                </LoadingButton>\r\n                            </TableCell>\r\n                        }\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n    )\r\n}\r\n\r\nexport default BasketTable;","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nconst BasketPage = () => {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    \r\n    if (basket?.items.length === 0 || basket === null) return <Typography variant=\"h3\">Your basket is empty</Typography> \r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to=\"/checkout\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BasketPage;","import { Link } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\n\r\nconst Login = () => {\r\n  const [values, setValues] = useState({\r\n      username: \"\",\r\n      password: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();  \r\n    setLoading(true);\r\n    agent.Account.login(values)\r\n      .then(data => {\r\n        dispatch(signInUser(data));\r\n        navigate(\"/catalog\");\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleInputChange = (event: any) => {\r\n    const { name, value } = event.target;\r\n    setValues({...values, [name]: value});\r\n  };\r\n\r\n  return (\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n          <Box sx={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n                onChange={handleInputChange}\r\n                value={values.username}\r\n                />\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleInputChange}\r\n                value={values.password}\r\n                />\r\n                <LoadingButton\r\n                loading={loading}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                <Grid item>\r\n                    <Link to=\"/register\" >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n            </Box>\r\n          </Box>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import { Link } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from 'react-router';\r\nimport agent from '../../app/api/agent';\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { toast } from 'react-toastify';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nconst Register = () => {\r\n  const [values, setValues] = useState({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [usernameErrors, setUsernameErrors] = useState<string[]>([]);\r\n  const [emailErrors, setEmailErrors] = useState<string[]>([]);\r\n  const [passwordErrors, setPasswordErrors] = useState<string[]>([]);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleApiErrors = (errors: any) => {\r\n    setUsernameErrors([]);\r\n    setEmailErrors([]);\r\n    setPasswordErrors([]);\r\n\r\n    const modelStateErrors: string[] = [];\r\n    for (const key in errors) {\r\n        modelStateErrors.push(errors[key])\r\n    }\r\n\r\n    modelStateErrors.flat().forEach((error) => {\r\n        if (error.includes(\"Username\")) setUsernameErrors(prevErrors => [...prevErrors, error])\r\n        else if (error.includes(\"Email\")) setEmailErrors(prevErrors => [...prevErrors, error])\r\n        else if (error.includes(\"Password\")) setPasswordErrors(prevErrors => [...prevErrors, error])\r\n    });\r\n  }\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();  \r\n    setLoading(true);\r\n    agent.Account.register(values)\r\n        .then(() => {\r\n            dispatch(signInUser({username: values.username, password: values.password}));\r\n            navigate(\"/catalog\")\r\n            toast.success(\"Registration successful!\");\r\n        })\r\n        .catch(error => handleApiErrors(error.data.errors))\r\n    setLoading(false);\r\n    // navigate(\"/catalog\");\r\n  };\r\n\r\n  const handleInputChange = (event: any) => {\r\n    const { name, value } = event.target;\r\n    setValues({...values, [name]: value});\r\n  };\r\n\r\n  return (\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n          <Box sx={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoFocus\r\n                onChange={handleInputChange}\r\n                value={values.username}\r\n                error={usernameErrors.length > 0}\r\n                helperText={usernameErrors}\r\n                />\r\n                \r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Email address\"\r\n                name=\"email\"\r\n                onChange={handleInputChange}\r\n                value={values.email}\r\n                error={emailErrors.length > 0}\r\n                helperText={emailErrors}\r\n                />\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleInputChange}\r\n                value={values.password}\r\n                error={passwordErrors.length > 0}\r\n                helperText={passwordErrors}\r\n                />\r\n                <LoadingButton\r\n                loading={loading}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                <Grid item>\r\n                    <Link to=\"/login\" >\r\n                    {\"Already have an account? Sign In!\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n            </Box>\r\n          </Box>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Register;","import { Navigate } from \"react-router\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\nconst PrivateRoute = ({ children } : any) => {\r\n    const { user } = useAppSelector(state => state.account);\r\n    return user ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default PrivateRoute;","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectOrder: (id: number) => void;\r\n}\r\n\r\nconst OrderDetails = ({ order, setSelectOrder }: Props) => {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    \r\n    return (\r\n        <>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography sx={{ p: 2 }} gutterBottom variant=\"h4\">Order #{order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectOrder(0)} sx={{ m: 2 }} size=\"large\" variant=\"contained\">Back to orders</Button>\r\n            </Box>\r\n            <BasketTable \r\n                items={order.orderItems as unknown as BasketItem[]}\r\n                isBasket={false}\r\n            />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;","import { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { Order } from '../../app/models/order';\r\nimport { Button } from '@mui/material';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport OrderDetails from './OrderDetails';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading Orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetails\r\n            order={orders?.find(order => order.id === selectedOrderNumber)!}\r\n            setSelectOrder={setSelectedOrderNumber} \r\n        />\r\n    )\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell align=\"center\">Order number</TableCell>\r\n                    <TableCell align=\"center\">Total</TableCell>\r\n                    <TableCell align=\"center\">Order date</TableCell>\r\n                    <TableCell align=\"center\">Order status</TableCell>\r\n                    <TableCell align=\"center\"> <PreviewIcon /> </TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {orders?.map((order) => (\r\n                    <TableRow\r\n                    key={order.id}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    >\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                        {order.id}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{currencyFormat(order.total)}</TableCell>\r\n                    <TableCell align=\"center\">{order.orderDate.split('T')[0]}</TableCell>\r\n                    <TableCell align=\"center\">{order.orderStatus}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <Button onClick={() => setSelectedOrderNumber(order.id)}> View </Button>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n    )\r\n}\r\n\r\nexport default Orders;","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst AddressForm = ({ values, handleInputChange, saveAddress, handleSaveAddress, disableSaveAddres }: any) => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            label=\"Full name\"\r\n            fullWidth\r\n            autoComplete=\"name\"\r\n            variant=\"standard\"\r\n            value={values.fullName}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address 1\"\r\n            variant=\"standard\"\r\n            value={values.address1}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address 2\"\r\n            variant=\"standard\"\r\n            value={values.address2}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            variant=\"standard\"\r\n            value={values.city}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"state\"\r\n            name=\"state\"\r\n            label=\"State/Province/Region\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={values.state}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n            variant=\"standard\"\r\n            value={values.zip}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            variant=\"standard\"\r\n            value={values.country}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" disabled={disableSaveAddres} checked={saveAddress} onChange={handleSaveAddress} />}\r\n            label=\"Save this as the default address\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressForm;","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n});\r\n","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\n\r\ninterface Props {\r\n  cardState: {elementError: {[key in StripeElementType]?: string}};\r\n  onCardInputChange: (event: any) => void;\r\n  handleNameInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange, handleNameInputChange }: Props) {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            id=\"cardName\"\r\n            name=\"nameOnCard\"\r\n            label=\"Name on card\"\r\n            fullWidth\r\n            autoComplete=\"cc-name\"\r\n            variant=\"outlined\"\r\n            onChange={handleNameInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            id=\"cardNumber\"\r\n            name=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps= {{ shrink: true }}\r\n            InputProps= {{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }              \r\n            }}\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            id=\"expDate\"\r\n            name=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps= {{ shrink: true }}\r\n            InputProps= {{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }              \r\n            }}\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            id=\"cvv\"\r\n            name=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps= {{ shrink: true }}\r\n            InputProps= {{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }              \r\n            }}\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nconst Review = () => {\r\n  const { basket } = useAppSelector(state => state.basket);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n          <Grid item xs={6} />\r\n          <Grid item xs={6}>\r\n              <BasketSummary />\r\n          </Grid>\r\n      </Grid>\r\n    </>  \r\n  );\r\n}\r\n\r\nexport default Review;","import { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { clearBasket } from '../basket/basketSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\nimport { CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nconst CheckoutPage = () => {\r\n  const dispatch = useAppDispatch()\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [orderNumber, setOrderNumber] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    country: \"\",\r\n    nameOnCard: \"\"\r\n  });\r\n  const [saveAddress, setSaveAddress] = useState(false);\r\n  const [disableSaveAddres, setDisableSaveAddress] = useState(false);\r\n  const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}});\r\n  const [paymentMessage, setPaymentMessage] = useState(\"\");\r\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n  const { basket } = useAppSelector(state => state.basket);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [cardComplete, setCardComplete] = useState<any>({\r\n    cardNumber: false,\r\n    cardExpiry: false,\r\n    cardCvc: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    agent.Account.fetchAddress()\r\n      .then(response => {\r\n        if (response) {\r\n          setFormValues(formValues => {\r\n            return {...formValues, ...response}\r\n          });\r\n          setDisableSaveAddress(true);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  async function submitOrder() {\r\n    setLoading(true);\r\n    \r\n    if (!stripe || !elements) return; // stripe is not ready;\r\n\r\n    try {\r\n      const cardElement = elements.getElement(CardNumberElement);\r\n      const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n        payment_method: {\r\n          card: cardElement!,\r\n          billing_details: {\r\n            name: formValues.nameOnCard\r\n          }\r\n        }\r\n      });\r\n\r\n      if (paymentResult.paymentIntent?.status === \"succeeded\") {\r\n        const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress: formValues,  });\r\n        setOrderNumber(orderNumber);\r\n        setPaymentSucceeded(true);\r\n        setPaymentMessage(\"The order was placed successfuly.\")\r\n        setActiveStep(activeStep + 1);\r\n        dispatch(clearBasket());\r\n      } else {\r\n        setPaymentMessage(paymentResult.error?.message!);\r\n        setPaymentSucceeded(false);\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  } \r\n\r\n  const handleNext = async () => {\r\n    if (activeStep === steps.length - 1) {\r\n      await submitOrder()\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSaveAddress = () => {\r\n    setSaveAddress(saved => !saved)\r\n  }\r\n\r\n\r\n  const addressFormIsValid = () => {\r\n    return formValues.fullName.length > 0 && \r\n      formValues.address1.length > 0 && \r\n      formValues.address2.length > 0 && \r\n      formValues.city.length > 0 && \r\n      formValues.state.length > 0 && \r\n      formValues.zip.length > 0 && \r\n      formValues.country.length > 0;\r\n  }\r\n\r\n  const paymentFormIsValid = () => {\r\n    return cardComplete.cardNumber && cardComplete.cardExpiry && cardComplete.cardCvc && formValues.nameOnCard.trim().length > 0;\r\n  }\r\n\r\n  const handleFormInputChange = (event: any) => {\r\n    const { name, value } = event.target;\r\n    setFormValues({...formValues, [name]: value});\r\n    setDisableSaveAddress(false);\r\n  };\r\n\r\n  const onCardInputChange = (event: any) => {\r\n    setCardState({\r\n      ...cardState,\r\n      elementError: {\r\n        ...cardState.elementError,\r\n        [event.elementType]: event.error?.message\r\n      }\r\n    });\r\n\r\n    setCardComplete({\r\n      ...cardComplete,\r\n      [event.elementType]: event.complete\r\n    })\r\n  }\r\n\r\n  const submitDisabled = (): boolean => {\r\n    if (activeStep === steps.length - 1) {\r\n      return !paymentFormIsValid();\r\n    } else {\r\n      return !addressFormIsValid();\r\n    }\r\n  }\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddressForm values={formValues} \r\n                handleInputChange={handleFormInputChange} \r\n                saveAddress={saveAddress} \r\n                handleSaveAddress={handleSaveAddress}\r\n                disableSaveAddres={disableSaveAddres} \r\n              />;\r\n      case 1:\r\n        return <Review />;\r\n      case 2:\r\n        return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} handleNameInputChange={handleFormInputChange} />;      \r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n\r\n  return (\r\n      <>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                Checkout\r\n            </Typography>\r\n            <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                {steps.map((label) => (\r\n                <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n                ))}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                <>\r\n                    <Typography variant=\"h5\" gutterBottom>\r\n                    {paymentMessage}\r\n                    </Typography>\r\n                    {paymentSucceeded ? (\r\n                      <Typography variant=\"subtitle1\">\r\n                        Your order number is #{orderNumber}. We have emailed your order\r\n                        confirmation, and will send you an update when your order has\r\n                        shipped.\r\n                      </Typography>\r\n                    ) : (\r\n                      <Button variant='contained' onClick={handleBack}>Back</Button>\r\n                    )}\r\n                    \r\n                </>\r\n                ) : (\r\n                <>\r\n                    {getStepContent(activeStep)}\r\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    {activeStep !== 0 && (\r\n                        <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                        Back\r\n                        </Button>\r\n                    )}\r\n                    <LoadingButton\r\n                        disabled={submitDisabled()}\r\n                        loading={loading}\r\n                        variant=\"contained\"\r\n                        onClick={handleNext}\r\n                        sx={{ mt: 3, ml: 1 }}\r\n                    >\r\n                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                    </LoadingButton>\r\n                    </Box>\r\n                </>\r\n                )}\r\n            </>\r\n            </Paper>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51K34NIBbZoAyq3Izz3wqHWC13EhrnmvsmsUFl1Sn3lGUlmmXCmAlfkZor9vERF4ZNZh3dRPAERTHTbGwnWOi0BB1006s0Yu3Lq\");\r\n\r\nconst CheckoutWrapper = () => {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading checkout...\" />\r\n\r\n    return (\r\n       <Elements stripe={stripePromise}>\r\n           <CheckoutPage />\r\n       </Elements> \r\n    )\r\n}\r\n\r\nexport default CheckoutWrapper;","import { useCallback, useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\n\nimport Header from \"./Header\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp]);\n\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: darkMode ? \"#121212\" : \"#eaeaea\"\n      }\n    }\n  });\n\n  const handleThemeChange = () => setDarkMode(!darkMode);\n\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ToastContainer theme=\"colored\" position=\"bottom-right\" hideProgressBar />\n        <CssBaseline />\n        <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/catalog\" element={<Container><Catalog /></Container>} />\n            <Route path=\"/catalog/:id\" element={<Container><ProductDetails /></Container>} />\n            <Route path=\"/about\" element={<AboutPage />} />\n            <Route path=\"/contact\" element={<ContactPage />} />\n            <Route path=\"/basket\" element={<Container><BasketPage /></Container>} />\n            <Route path=\"/checkout\" element={<Container><PrivateRoute><CheckoutWrapper /></PrivateRoute></Container>} />\n            <Route path=\"/orders\" element={<Container><PrivateRoute><Orders/></PrivateRoute></Container>} />\n            <Route path=\"/login\" element={<Container><Login /></Container>} />\n            <Route path=\"/register\" element={<Container><Register /></Container>} />\n          </Routes>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\n\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './app/layout/styles.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <Provider store={store}>\n          <App />\n        </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}